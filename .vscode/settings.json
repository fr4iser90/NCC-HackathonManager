{
  // ... other settings might be here ...

  "actionButtons": {
    "defaultColor": "white", // Default button color
    "loadNpmCommands": false, // Don't auto-add npm commands
    "reloadButton": "♻️", // Or null to disable reload button
    "commands": [
      // Button 1: Hot Reload All (Local)
      {
        "name": "$(sync) Pytest All", // $(sync) is a refresh-like icon
        "tooltip": "Run: pytests all",
        "color": "cyan", // Example color
        "command": "nix-shell --run 'pytest'",
        "singleInstance": true // Reuse the same terminal
      },
      // New buttons from shell.nix
      {
        "name": "$(refresh) Rebuild Frontend",
        "tooltip": "Remove node_modules and rebuild frontend",
        "color": "lightseagreen",
        "command": "nix-shell --run 'rebuild-frontend'",
        "singleInstance": true
      },
      {
        "name": "$(server) Rebuild Backend",
        "tooltip": "Rebuild and restart backend containers",
        "color": "lightblue",
        "command": "nix-shell --run 'rebuild-backend'",
        "singleInstance": true
      },
      {
        "name": "$(beaker) Pytest Minimal Log",
        "tooltip": "Run pytest with minimal logging to test_report.txt",
        "color": "cyan",
        "command": "nix-shell --run 'pytest-minimal-log'",
        "singleInstance": true
      },
      {
        "name": "$(tools) Lint Fix",
        "tooltip": "Run black and pylint auto-fix",
        "color": "lightgreen",
        "command": "nix-shell --run 'lint-fix'",
        "singleInstance": true
      },
      {
        "name": "$(shield) Security Scan",
        "tooltip": "Run Trivy security scan",
        "color": "orange",
        "command": "nix-shell --run 'trivy'",
        "singleInstance": true
      },
      {
        "name": "$(trash) Clean All",
        "tooltip": "Clean all caches and artifacts",
        "color": "tomato",
        "command": "nix-shell --run 'close-kill-clean-all'",
        "singleInstance": true
      }
    ]
  }

  // ... other settings might be here ...
}