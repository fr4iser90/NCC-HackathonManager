version: '3.8'

services:
  traefik:
    build: ./traefik
    container_name: hackathon-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config:/etc/traefik
      - ./traefik/acme:/etc/traefik/acme
    networks:
      - hackathon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.{{DOMAIN}}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$xyz123$$hashed_password"

  api:
    build: ./api
    container_name: hackathon-api
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://hackathon:hackathon@postgres:5432/hackathon
      - JWT_SECRET=your_jwt_secret
      - ADMIN_EMAIL={{EMAIL}}
    networks:
      - hackathon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.{{DOMAIN}}`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  frontend:
    build: ./frontend
    container_name: hackathon-frontend
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - REACT_APP_API_URL=https://api.{{DOMAIN}}
    networks:
      - hackathon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`{{DOMAIN}}`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  postgres:
    build: ./database
    container_name: hackathon-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=hackathon
      - POSTGRES_PASSWORD=hackathon
      - POSTGRES_DB=hackathon
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hackathon

  prometheus:
    image: prom/prometheus
    container_name: hackathon-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - hackathon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.{{DOMAIN}}`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana
    container_name: hackathon-grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - hackathon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{DOMAIN}}`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

networks:
  hackathon:
    external: true

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
